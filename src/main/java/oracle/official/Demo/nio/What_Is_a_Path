The following figure shows a sample directory tree containing a single root node. Microsoft Windows supports multiple root
nodes. Each root node maps to a volume, such as C:\ or D:\. The Solaris OS supports a single root node, which is denoted by the
by the slash character, /.

A file is identified by its path through the file system, beginning from the root node. For example, the statusReport file in
the previous figure is described by the following notation in the Solaris OS:
    /home/sally/statusReport
In Microsoft Windows, statusReport is described by the following notation:
    C:\home\sally\statusReport

#Relative or Absolute?
A path is either relative or absolute. An absolute path always contains the root element and the complete directory list 
required to locate the file. For example, /home/sally/statusReport is an absolute path. All of the information needed to locate
the file is contained in the path string. 
A relative path needs to be combined with another path in order to access a file. For example, joe/foo is a relative path. 
Without more information, a program cannot reliably locate the joe/foo directory in the file system.

#Symbolic Links
File system objects are most typically directories or files. Everyone is familiar with these objects. But some file system also
support the notion of symbolic links. A symbolic link is also referred to as a symlink or a soft link.

A symbolic link is a special file that serves as a reference to another file. For the most part, symbolic links are transparent
to applications, and operations on symbolic links are automatically redirected to the target of the link. (The file or 
directory being pointed to is called the target of the link.) Exceptions are when a symbolic link is deleted, or renamed in
which case the link is deleted, or renamed and not the target of the link.

A symbolic link is usually transparent to the user. Reading or writing to a symbolic link is the same as reading or 
writing to any other file or directory.

The phrase resolving a link means to substitute the actual location in the file system for the symbolic link. In the 
example, resolving logFile yields dir/logs/HomeLogFile.

In real-world scenarios, most file systems make liberal use of symbolic links. Occasionally, a carelessly created 
symbolic link can cause a circular reference. A circular reference occurs when the target of a link points back to the 
original link. The circular reference might be indirect: directory a points to directory b, which points to directory c, 
which contains a subdirectory pointing back to directory a. Circular references can cause havoc when a program is 
recursively walking a directory structure. However, this scenario has been accounted for and will not cause your 
program to loop infinitely.

The next page discusses the heart of file I/O support in the Java programming language, the Path class.

#This document copy from Oracle!!
#COPY FROM http://docs.oracle.com/javase/tutorial/essential/io/path.html
#DATE: 2014-08-28